import yfinance as yf
import requests
from datetime import datetime, timedelta
import socket

print("="*60)
print("üîç DIAGN√ìSTICO DE CONEX√ÉO - Yahoo Finance")
print("="*60)

# Teste 1: Internet b√°sica
print("\n1Ô∏è‚É£ Testando conex√£o b√°sica com internet...")
try:
    response = requests.get("https://www.google.com", timeout=5)
    print(f"‚úÖ Internet funcionando (status: {response.status_code})")
except Exception as e:
    print(f"‚ùå Sem internet: {e}")

# Teste 2: Acesso ao Yahoo Finance
print("\n2Ô∏è‚É£ Testando acesso ao Yahoo Finance...")
try:
    response = requests.get("https://finance.yahoo.com", timeout=10)
    print(f"‚úÖ Yahoo Finance acess√≠vel (status: {response.status_code})")
except Exception as e:
    print(f"‚ùå Yahoo Finance bloqueado: {e}")

# Teste 3: API do Yahoo Finance
print("\n3Ô∏è‚É£ Testando API do yfinance...")
try:
    response = requests.get(
        "https://query2.finance.yahoo.com/v8/finance/chart/PETR4.SA",
        timeout=10
    )
    print(f"‚úÖ API Yahoo acess√≠vel (status: {response.status_code})")
except Exception as e:
    print(f"‚ùå API Yahoo bloqueada: {e}")

# Teste 4: Download via yfinance (ticker brasileiro)
print("\n4Ô∏è‚É£ Testando download PETR4.SA...")
try:
    ticker = yf.Ticker("PETR4.SA")
    hist = ticker.history(period="5d")
    if not hist.empty:
        print(f"‚úÖ PETR4.SA funcionando ({len(hist)} dias)")
        print(hist.tail(2))
    else:
        print("‚ùå PETR4.SA retornou vazio")
except Exception as e:
    print(f"‚ùå Erro em PETR4.SA: {e}")

# Teste 5: Download via yfinance (ticker americano)
print("\n5Ô∏è‚É£ Testando download AAPL (EUA)...")
try:
    ticker = yf.Ticker("AAPL")
    hist = ticker.history(period="5d")
    if not hist.empty:
        print(f"‚úÖ AAPL funcionando ({len(hist)} dias)")
        print(hist.tail(2))
    else:
        print("‚ùå AAPL retornou vazio")
except Exception as e:
    print(f"‚ùå Erro em AAPL: {e}")

# Teste 6: √çndice brasileiro
print("\n6Ô∏è‚É£ Testando √≠ndice ^BVSP...")
try:
    ticker = yf.Ticker("^BVSP")
    hist = ticker.history(period="5d")
    if not hist.empty:
        print(f"‚úÖ ^BVSP funcionando ({len(hist)} dias)")
        print(hist.tail(2))
    else:
        print("‚ùå ^BVSP retornou vazio")
except Exception as e:
    print(f"‚ùå Erro em ^BVSP: {e}")

# Teste 7: Verificar DNS
print("\n7Ô∏è‚É£ Testando resolu√ß√£o DNS...")
try:
    ip = socket.gethostbyname("finance.yahoo.com")
    print(f"‚úÖ DNS resolvendo: finance.yahoo.com -> {ip}")
except Exception as e:
    print(f"‚ùå Falha no DNS: {e}")

# Teste 8: Proxy
print("\n8Ô∏è‚É£ Verificando configura√ß√£o de proxy...")
import os
http_proxy = os.environ.get('HTTP_PROXY') or os.environ.get('http_proxy')
https_proxy = os.environ.get('HTTPS_PROXY') or os.environ.get('https_proxy')
if http_proxy or https_proxy:
    print(f"‚ö†Ô∏è  Proxy detectado:")
    print(f"   HTTP: {http_proxy}")
    print(f"   HTTPS: {https_proxy}")
else:
    print("‚úÖ Nenhum proxy configurado")

print("\n" + "="*60)
print("üèÅ DIAGN√ìSTICO CONCLU√çDO")
print("="*60)
